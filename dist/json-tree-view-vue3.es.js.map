{"version":3,"file":"json-tree-view-vue3.es.js","sources":["../node_modules/switch-ts/src/index.ts","../src/components/JsonTreeViewItem.vue","../src/components/JsonTreeView.vue"],"sourcesContent":["type When<T> = {\n  is: <R>(prediction: (v: T) => boolean, producer: () => R) => Chain<T, R>;\n};\n\ntype Chain<T, R> = {\n  is: (prediction: (v: T) => boolean, producer: () => R) => Chain<T, R>;\n  default: (producer: () => R) => R;\n};\n\nconst match = <T, R>(value: R): Chain<T, R> => ({\n  is: () => match<T, R>(value),\n  default: (): R => value,\n});\n\nconst chain = <T, R>(value: T): Chain<T, R> => ({\n  is: (prediction: (v: T) => boolean, producer: () => R) =>\n    prediction(value) ? match(producer()) : chain<T, R>(value),\n  default: (producer: () => R) => producer(),\n});\n\nexport const when = <T>(value: T): When<T> => ({\n  is: <R>(prediction: (v: T) => boolean, producer: () => R) =>\n    prediction(value) ? match<T, R>(producer()) : chain<T, R>(value),\n});\n\nexport const then =\n  <T>(value: T) =>\n  (): T =>\n    value;\n\nexport const eq =\n  <T>(value1: T) =>\n  (value2: T): boolean =>\n    value1 === value2;\nexport const ne =\n  <T>(value1: T) =>\n  (value2: T): boolean =>\n    value1 !== value2;\nexport const gt =\n  <T>(value1: T) =>\n  (value2: T): boolean =>\n    value1 < value2;\nexport const lt =\n  <T>(value1: T) =>\n  (value2: T): boolean =>\n    value1 > value2;\nexport const ge =\n  <T>(value1: T) =>\n  (value2: T): boolean =>\n    value1 <= value2;\nexport const le =\n  <T>(value1: T) =>\n  (value2: T): boolean =>\n    value1 >= value2;\n","<script lang=\"ts\">\nexport enum ItemType {\n  OBJECT,\n  ARRAY,\n  VALUE\n}\n\nexport type PrimitiveTypes = string | number | boolean | null\n\nexport interface SelectedData {\n  key: string\n  value: PrimitiveTypes\n  path: string\n}\n\nexport type ItemData = {\n  key: string\n  type: ItemType\n  path: string\n  depth: number\n  length?: number\n  children?: ItemData[]\n  value?: PrimitiveTypes\n}\n\nexport type Props = {\n  data: ItemData\n  maxDepth?: number\n  canSelect?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, reactive } from 'vue'\nimport { then, when } from 'switch-ts'\n\ndefineOptions({\n  name: 'JsonTreeViewItem'\n})\n\nconst props = withDefaults(defineProps<Props>(), {\n  maxDepth: 1,\n  canSelect: false\n})\n\nconst emit = defineEmits<{\n  (e: 'selected', value: SelectedData): void\n}>()\n\nconst state = reactive({\n  open: props.data.depth < props.maxDepth\n})\n\nconst toggleOpen = (): void => {\n  state.open = !state.open\n}\n\nconst onClick = (data: ItemData): void =>\n  emit('selected', {\n    key: data.key,\n    value: data.value,\n    path: data.path\n  } as SelectedData)\n\nconst onSelected = (data: SelectedData): void => emit('selected', data)\n\nconst getKey = (itemDate: ItemData): string => {\n  const keyValue = Number(itemDate.key)\n  return !isNaN(keyValue) ? `${itemDate.key}\":` : `\"${itemDate.key}\":`\n}\n\nconst getValueColor = (value: PrimitiveTypes): string =>\n  when(typeof value)\n    .is((v) => v === 'string', then('var(--jtv-string-color)'))\n    .is((v) => v === 'number', then('var(--jtv-number-color)'))\n    .is((v) => v === 'boolean', then('var(--jtv-boolean-color)'))\n    .is((v) => v === 'object', then('var(--jtv-null-color)')) // for null value\n    .default(then('var(--jtv-valueKey-color)'))\n\nconst classes = computed((): unknown => {\n  return {\n    'chevron-arrow': true,\n    opened: state.open\n  }\n})\n\nconst valueClasses = computed((): unknown => {\n  return {\n    'value-key': true,\n    'can-select': props.canSelect\n  }\n})\n\nconst lengthString = computed((): string => {\n  const length = props.data.length\n  if (props.data.type === ItemType.ARRAY) {\n    return length === 1 ? `${length} element` : `${length} elements`\n  }\n  return length === 1 ? `${length} property` : `${length} properties`\n})\n\nconst dataValue = computed((): string => JSON.stringify(props.data.value))\n</script>\n\n<template>\n  <div class=\"json-view-item\">\n    <div v-if=\"data.type === ItemType.OBJECT || data.type === ItemType.ARRAY\">\n      <button\n        class=\"data-key\"\n        :aria-expanded=\"state.open ? 'true' : 'false'\"\n        @click.stop=\"toggleOpen\"\n      >\n        <div :class=\"classes\" />\n        {{ data.key }}:\n        <span class=\"properties\">{{ lengthString }}</span>\n      </button>\n      <div v-if=\"state.open\">\n        <JsonTreeViewItem\n          v-for=\"child in data.children\"\n          :key=\"getKey(child)\"\n          :data=\"child\"\n          :maxDepth=\"maxDepth\"\n          :canSelect=\"canSelect\"\n          @selected=\"onSelected\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"data.type === ItemType.VALUE\"\n      :class=\"valueClasses\"\n      :role=\"canSelect ? 'button' : undefined\"\n      :tabindex=\"canSelect ? '0' : undefined\"\n      @click=\"onClick(data)\"\n      @keyup.enter=\"onClick(data)\"\n      @keyup.space=\"onClick(data)\"\n    >\n      <span class=\"value-key\">{{ data.key }}:</span>\n      <span :style=\"{ color: getValueColor(data.value as PrimitiveTypes) }\" :v-html=\"dataValue\">\n        {{ dataValue }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.json-view-item:not(.root-item) {\n  margin-left: 15px;\n}\n.value-key {\n  color: var(--jtv-valueKey-color);\n  font-weight: 600;\n  margin-left: 10px;\n  border-radius: 2px;\n  white-space: nowrap;\n  padding: 5px 5px 5px 10px;\n  &.can-select {\n    cursor: pointer;\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.08);\n    }\n    &:focus {\n      outline: 2px solid var(--jtv-hover-color);\n    }\n  }\n}\n.data-key {\n  font-size: 100%;\n  font-family: inherit;\n  border: 0;\n  background-color: transparent;\n  width: 100%;\n  color: var(--jtv-key-color);\n  display: flex;\n  align-items: center;\n  border-radius: 2px;\n  font-weight: 600;\n  cursor: pointer;\n  white-space: nowrap;\n  padding: 5px;\n  &:hover {\n    background-color: var(--jtv-hover-color);\n  }\n  &:focus {\n    outline: 2px solid var(--jtv-hover-color);\n  }\n  &::-moz-focus-inner {\n    border: 0;\n  }\n  .properties {\n    font-weight: 300;\n    opacity: 0.9;\n    margin-left: 4px;\n    user-select: none;\n  }\n}\n.chevron-arrow {\n  flex-shrink: 0;\n  border-right: 2px solid var(--jtv-arrow-color);\n  border-bottom: 2px solid var(--jtv-arrow-color);\n  width: var(--jtv-arrow-size);\n  height: var(--jtv-arrow-size);\n  margin-right: 20px;\n  margin-left: 5px;\n  transform: rotate(-45deg);\n  &.opened {\n    margin-top: -3px;\n    transform: rotate(45deg);\n  }\n}\n</style>\n","<script lang=\"ts\">\nexport type ColorScheme = 'light' | 'dark'\n\nexport type Props = {\n  json: string\n  rootKey?: string\n  maxDepth?: number\n  colorScheme?: ColorScheme\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport JsonTreeViewItem, {\n  type ItemData,\n  ItemType,\n  type PrimitiveTypes,\n  type SelectedData\n} from './JsonTreeViewItem.vue'\n\ndefineOptions({\n  name: 'JsonTreeView'\n})\n\nconst props = withDefaults(defineProps<Props>(), {\n  rootKey: '/',\n  maxDepth: 1,\n  colorScheme: 'light'\n})\n\nconst emit = defineEmits<{\n  (e: 'selected', value: SelectedData): void\n}>()\n\nconst onSelected = (selectedData: SelectedData): void => emit('selected', selectedData)\n\nconst build = (\n  key: string,\n  value: PrimitiveTypes | Object,\n  depth: number,\n  path: string,\n  includeKey: boolean\n): ItemData => {\n  if (value instanceof Object) {\n    if (value instanceof Array) {\n      const children = value.map((element, index) =>\n        build(\n          index.toString(),\n          element,\n          depth + 1,\n          includeKey ? `${path}${key}[${index}].` : `${path}`,\n          false\n        )\n      )\n      return {\n        key,\n        type: ItemType.ARRAY,\n        depth,\n        path,\n        length: children.length,\n        children\n      }\n    }\n\n    const children = Object.entries(value).map(([childKey, childValue]) =>\n      build(childKey, childValue, depth + 1, includeKey ? `${path}${key}.` : `${path}`, true)\n    )\n    return {\n      key,\n      type: ItemType.OBJECT,\n      depth,\n      path,\n      length: children.length,\n      children: children\n    }\n  } else {\n    return {\n      key,\n      type: ItemType.VALUE,\n      path: includeKey ? `${path}${key}` : path.slice(0, -1),\n      depth,\n      value\n    }\n  }\n}\n\nconst parsed = computed((): ItemData => {\n  const data = JSON.parse(props.json)\n  if (data instanceof Object) {\n    return build(props.rootKey, { ...data }, 0, '', true)\n  }\n  return {\n    key: props.rootKey,\n    type: ItemType.VALUE,\n    path: '',\n    depth: 0,\n    value: props.json\n  }\n})\n</script>\n\n<template>\n  <JsonTreeViewItem\n    :class=\"[{ 'root-item': true, dark: colorScheme === 'dark' }]\"\n    :data=\"parsed\"\n    :maxDepth=\"maxDepth\"\n    @selected=\"onSelected\"\n  />\n</template>\n\n<style lang=\"scss\" scoped>\n.root-item {\n  --jtv-key-color: #0977e6;\n  --jtv-valueKey-color: #073642;\n  --jtv-string-color: #268bd2;\n  --jtv-number-color: #2aa198;\n  --jtv-boolean-color: #cb4b16;\n  --jtv-null-color: #6c71c4;\n  --jtv-arrow-size: 6px;\n  --jtv-arrow-color: #444;\n  --jtv-hover-color: rgba(0, 0, 0, 0.1);\n  margin-left: 0;\n  width: 100%;\n  height: auto;\n}\n.root-item.dark {\n  --jtv-key-color: #80d8ff;\n  --jtv-valueKey-color: #fdf6e3;\n  --jtv-hover-color: rgba(255, 255, 255, 0.1);\n  --jtv-arrow-color: #fdf6e3;\n}\n</style>\n"],"names":["match","value","chain","prediction","producer","when","then","ItemType","ItemType2","props","__props","emit","__emit","state","reactive","toggleOpen","onClick","data","onSelected","getKey","itemDate","keyValue","getValueColor","v","classes","computed","valueClasses","lengthString","length","dataValue","selectedData","build","key","depth","path","includeKey","children","element","index","childKey","childValue","parsed"],"mappings":"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","x_google_ignoreList":[0]}